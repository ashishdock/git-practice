=================================================================
$variable1 = 5;

$reference = \$variable1;

print $reference;
=================================================================
@a = (1, 2, 3);

$arrayref = \@a;

print "@$arrayref";
=================================================================
$variable1 = 5;

$variablename = "variable1";

print "$$variablename\n";
=================================================================
@a = (1, 2, 3);

$arrayref = "a";

print "@$arrayref";
=================================================================
@array = (1, 2, 3);

$arrayref = \@array;

print @$arrayref[0];

print $arrayref->[0];
=================================================================
$arrayref = [1, 2, 3];

print $$arrayref[0];
=================================================================
$reference = \"Hello!";

print $$reference;
=================================================================
$reference4 = \\\\"Hello!";
=================================================================
print $$$$$reference4;
=================================================================
$scalarreference = \$variable1;
$arrayreference  = \@array;
$hashreference   = \%hash;
$codereference   = \&subroutine;
$globreference   = \*name;
=================================================================
$variable1 = 100;
$scalarreference = \$variable1;
=================================================================
$variable1 = 100;
$scalarreference = \$variable1;
print "$$scalarreference\n";
=================================================================
@array = (1, 2, 3);
$arrayreference  = \@array;
=================================================================
@array = (1, 2, 3);
$arrayreference  = \@array;

print "@$arrayreference\n";
=================================================================
%hash = (that => this);
$hashreference   = \%hash;

print "$$hashreference{that}\n";
=================================================================
sub subroutine
{
    print "Hello!\n";
}
=================================================================
$codereference   = \&subroutine;
=================================================================
&$codereference;
=================================================================
sub printhello
{
    print "Hello!\n";
}

sub printem
{
    &{@_[0]};
}

printem \&printhello;
=================================================================
sub printhello
{
    my $handle = shift;
    print $handle "Hello!\n";
}
=================================================================
open FILEHANDLE, ">file.tmp" or die "Can't open file.";
=================================================================
printhello(FILEHANDLE);
=================================================================
printhello(*FILEHANDLE);
=================================================================
printhello(\*FILEHANDLE);
=================================================================
$$reference = 5;

print "$$reference\n";
=================================================================
print "$reference\n";
=================================================================
@a = (1, 2, 3);
@b = (4, 5, 6);

sub addem
{
    my ($reference1, $reference2) = @_;
    for ($loop_index = 0; $loop_index <= $#$reference1; 
        $loop_index++) {
        $result[$loop_index] = @$reference1[$loop_index] + 
            @$reference2[$loop_index];
    }
    return @result;
}

@array = addem (\@a, \@b);
print join (', ', @array);
=================================================================
@reflist = \($s1, $s2, $s3);      
@reflist = (\$s1, \$s2, \$s3);
=================================================================
$ref = \(2, 4, 6); 
print $$ref;
=================================================================
$ref = \(1 .. 3); 
print "@$ref";
=================================================================
$string = "Hello";
$ref = \substr($a, 0, 1);
print $ref;
=================================================================
$arrayreference = [1, 2, 3];

print $$arrayreference[0];
=================================================================
$arrayreference = [1, 2, 3];

print $arrayreference->[0];
=================================================================
@a = (1, 2, 3);
$s = pop @a;

print "@a\n";
=================================================================
@a = (1, 2, 3);
$s = pop @{[@a]};

print "@a\n";
=================================================================
print "@{[uc(hello)]} there.\n";
=================================================================
$ref = \(qw/Now is the time./);    #wrong!
=================================================================
$ref = [qw/Now is the time./];
print "@$ref";
=================================================================
$ref = [1, 2, 3];

for ($total = 0, $loop_index = 0; $loop_index <= $#$ref + 1;
    $loop_index++) {

    $total += $$ref[$loop_index];

}

print "Average value = " . $total / ($#$ref + 1);
=================================================================
$hashref = {
    Name  => Tommie,
    ID => 1234,
};
=================================================================
print $$hashref{Name};
=================================================================
$hashreference = {
    Name  => Tommie,
    ID => 1234,
};

print $hashreference->{Name};
=================================================================
$hashref = {
    fruit => apple,
    sandwich => hamburger,
    drink => bubbly,
};

while(($key, $value) = each(%$hashref)) {
    print "$key => $value\n";
}
=================================================================
$codereference = sub {print "Hello!\n"};

&$codereference;
=================================================================
$codereference = sub {print shift};

&$codereference("Hello!\n");
=================================================================
$codereference = sub {print shift};

$codereference->("Hello!\n");
=================================================================
$codereference = sub {100};

$s = &$codereference;
=================================================================
local $SIG{__WARN__} = sub {}; 
=================================================================
sub record
{
    ($value, $max, $min) = @_;

    if ($value >= $min && $value <= $max){
        return {
            value => $value,
            max => $max,
            min => $min,
        };
    } else {
        return;
    }
}
=================================================================
$myrecord = record(100, 1000, 10);
=================================================================
$myrecord = record(100, 1000, 10);

print $myrecord->{value};
=================================================================
$scalarreference = *name{SCALAR};
$arrayreference  = *name{ARRAY};
$hashreference   = *name{HASH};
$codereference   = *name{CODE};
$ioreference     = *name{IO};
$globreference   = *name{GLOB};
=================================================================
$variable1 = 5;

$scalarreference = *variable1{SCALAR};

print $$scalarreference;
=================================================================
$scalar = 1;

${*scalar{SCALAR}} = 5;

print $scalar;
=================================================================
sub printem
{
    print "Hello!\n";
}

$codereference = *printem{CODE};

&$codereference;
=================================================================
open FILEHANDLE, ">file.dat" or die "Couldn't open file.";

$ioref = *FILEHANDLE{IO};

print $ioref "Hello";

close $ioref;
=================================================================
sub writefile
{
    my $my_ioref = @_[0];
    print $my_ioref "Hello!";

}

open FILEHANDLE, ">file.dat" or die "Couldn't open file.";

$ioref = *FILEHANDLE{IO};

writefile $ioref;

close $ioref;
=================================================================
${*newscalar{SCALAR}} = 5;

print $newscalar;
=================================================================
$variable1 = 5;

$reference = \$variable1;

print $$reference;
=================================================================
$reference4 = \\\\"Hello!";
print $$$$$reference4;
=================================================================
@array = (1, 2, 3);
$arrayreference = \@array;

print $$arrayreference[0];
=================================================================
%hash = (
    Name  => Tommie,
    ID => 1234,
);

$hashreference = \%hash;

print $$hashreference{Name};
=================================================================
sub printem
{
    print shift;
}

$codereference = \&printem;

&$codereference ("Hello!\n");
=================================================================
@a = (1, 2, 3);
$ref = \@a;

print "@$ref";
=================================================================
$scalar = $$scalarreference;
@array = @$arrayreference;
%hash = %$hashreference;
&$codereference($argument1, $argument2);
*glob = *$globreference;
=================================================================
$scalar = ${$scalarreference};
@array = @{$arrayreference};
%hash = %{$hashreference};
&{$codereference}($argument1, $argument2);
*glob = *{$globreference};
=================================================================
$ref = 5;

@ref = (1, 2, 3);

print "${*ref}\n";
=================================================================
$ref = 5;

@ref = (1, 2, 3);

print "${*ref}\n";
=================================================================
print "@{*ref}\n";
=================================================================
$arrayreference = [1, 2, 3];

print $arrayreference->[0];
=================================================================
$hashreference->{key} = "This is the text.";

print $hashreference->{key};
=================================================================
sub printem
{
    print shift;
}

$codereference = \&printem;

$codereference->("Hello!\n");
=================================================================
$dataset[$today]->{prices}->[1234] = "$4999.99";
=================================================================
$arrayreference = [[1, 2, 3], [4, 5, 6]];
=================================================================
$arrayreference = [[1, 2, 3], [4, 5, 6]];

print "@{$arrayreference->[1]}";
=================================================================
$arrayreference = [[1, 2, 3], [4, 5, 6]];

print $arrayreference->[1]->[1];
=================================================================
$dataset[$today]->{prices}->[1234] = "$4999.99";
=================================================================
$dataset[$today]{prices}[1234] = "$4999.99";
=================================================================
@array = (
    [1, 2],
    [3, 4],
);

print $array[1][1];
=================================================================
@array = (
    [1, 2],
    [3, 4],
);

print $array[0][1];
=================================================================
@array = (
    [1, 2],
    [3, 4],
);

print $array[1][0];
=================================================================
@a = (1, 2, 3);
@b = (4, 5, 6);
=================================================================
@array = addem (\@a, \@b);
=================================================================
sub addem
{
    my ($ref1, $ref2) = @_;

    while (@$ref1) {

        unshift @result, pop(@$ref1) + pop(@$ref2);

    }

    return @result;
}
=================================================================
@array = addem (\@a, \@b);
print join (', ', @array);
=================================================================
sub getarrays
{
    @a = (1, 2, 3);
    @b = (4, 5, 6);

    return \@a, \@b;
}
=================================================================
($aref, $bref) = getarrays;

print "@$aref\n";
print "@$bref\n";
=================================================================
$variable1 = 5;
$scalarref = \$variable1;

print (ref $scalarref);
=================================================================
sub printem
{
    print shift;
}

$coderef = \&printem;

print (ref $coderef);
=================================================================
@a = (1, 2, 3);
@b = (4, 5, 6);

sub addem
{
    my ($ref1, $ref2) = @_;

    if (ref($ref1) eq "ARRAY" && ref($ref2) eq "ARRAY") {

        while (@$ref1) {

            unshift @result, pop(@$ref1) + pop(@$ref2);

        }

        return @result;

    } elsif (ref($ref1) eq "SCALAR" && ref($ref2) eq "SCALAR") {

        return $$ref1 + $$ref2;

    }
}

@array = addem (\@a, \@b);

print join (', ', @array);
=================================================================
$string = "Hello";
$ref = \substr($a, 0, 1);
print ref($ref);
=================================================================
$variable1 = 1;

$symbolicreference = "variable1";
=================================================================
$variable1 = 1;

$symbolicreference = "variable1";

print $$symbolicreference;
=================================================================
$variable1 = 1;

$symbolicreference = "variable1";
$$symbolicreference = 5;

print "$variable1\n";
=================================================================
$variablename = "variable1";

$$variablename = 5;

print "$variable1\n";
=================================================================
$arrayname = "array1";

$arrayname->[1] = 5;
print "$array1[1]\n";
=================================================================
$subroutinename = "subroutine1";

sub subroutine1
{
    print "Hello!\n";
}

&$subroutinename();
=================================================================
my $variable1 = 10;
$variablename = "variable1";               #Will be a problem. 
print "The value is $$variablename\n";     #Can't use symbolic reference here
=================================================================
$value = 5;

while(<>) {
    chomp;
    s/\$(\S+)/${$1}/;
    print;
}
=================================================================
use strict 'refs';

$variable = 100;
$variablename = "variable";

print $$variablename;
=================================================================
use strict 'refs';

$variable = 100;

{
    no strict 'refs';

    $variablename = "variable";

    print $$variablename;
}
=================================================================
sub makerefs
{
    my $scalar1 = \$scalar2;
    my $scalar2 = \$scalar1;

    my @array1 = (\@array2);
    my @array2 = (\@array1);
}

makerefs;
=================================================================
$arrayreference = [{first => 1, second => 2}, "Hello", "there"];
=================================================================
$arrayreference = [{first => 1, second => 2}, "Hello", "there"];

print "$arrayreference->{first} $arrayreference->{second}";
=================================================================
$arrayreference = [{first => 1, second => 2}, "Hello", "there"];

print "$arrayreference->{first} $arrayreference->{second}\n";
print "$arrayreference->[1] $arrayreference->[2]\n";
=================================================================
$salary = [{Ed => 1, Tom => 2, Mike => 3}, 50_000, 200_000,
    150_000];

$salary->{Ed} = 100_000;

for ($total = 0, $loop_index = 1; $loop_index <= $#$salary;
    $loop_index++) {

    $total += $salary->[$loop_index];
}

print "Average salary = \$" . $total / $#$salary;
vsub printem
{
    my $string1 = shift;
    return sub {my $string2 = shift;
        print "$string1 $string2\n";};
}
=================================================================
$hellosub = printem("Hello");
=================================================================
&$hellosub("today.");
&$hellosub("there.");
=================================================================
@greetings = ("Hello", "Hi", "Greetings");
=================================================================
foreach my $term (@greetings) {

    *{"print" . $term} = sub {print "$term\n"};

}
=================================================================
printHello();
printGreetings();
=================================================================
@greetings = ("Hello", "Hi", "Greetings");

foreach my $term (@greetings) {

    ${"print" . $term} = sub {print "$term\n"};
}
=================================================================
&$printHello();
&$printGreetings();
=================================================================
